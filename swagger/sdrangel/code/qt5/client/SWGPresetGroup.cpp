/**
 * SDRangel
 * This is the web API of SDRangel SDR software. SDRangel is an Open Source Qt5/OpenGL 3.0+ GUI and server Software Defined Radio and signal analyzer in software. It supports Airspy, BladeRF, HackRF, LimeSDR, PlutoSDR, RTL-SDR, SDRplay RSP1 and FunCube
 *
 * OpenAPI spec version: 4.0.0
 * Contact: f4exb06@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGPresetGroup.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGPresetGroup::SWGPresetGroup(QString* json) {
    init();
    this->fromJson(*json);
}

SWGPresetGroup::SWGPresetGroup() {
    init();
}

SWGPresetGroup::~SWGPresetGroup() {
    this->cleanup();
}

void
SWGPresetGroup::init() {
    group_name = new QString("");
    nb_presets = 0;
    presets = new QList<SWGPresetItem*>();
}

void
SWGPresetGroup::cleanup() {
    
    if(group_name != nullptr) {
        delete group_name;
    }


    if(presets != nullptr) {
        QList<SWGPresetItem*>* arr = presets;
        foreach(SWGPresetItem* o, *arr) {
            delete o;
        }
        delete presets;
    }
}

SWGPresetGroup*
SWGPresetGroup::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGPresetGroup::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&group_name, pJson["groupName"], "QString", "QString");
    ::Swagger::setValue(&nb_presets, pJson["nbPresets"], "qint32", "");
    
    ::Swagger::setValue(&presets, pJson["presets"], "QList", "SWGPresetItem");
    
}

QString
SWGPresetGroup::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGPresetGroup::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("groupName"), group_name, obj, QString("QString"));

    obj->insert("nbPresets", QJsonValue(nb_presets));

    QJsonArray presetsJsonArray;
    toJsonArray((QList<void*>*)presets, &presetsJsonArray, "presets", "SWGPresetItem");
    obj->insert("presets", presetsJsonArray);

    return obj;
}

QString*
SWGPresetGroup::getGroupName() {
    return group_name;
}
void
SWGPresetGroup::setGroupName(QString* group_name) {
    this->group_name = group_name;
}

qint32
SWGPresetGroup::getNbPresets() {
    return nb_presets;
}
void
SWGPresetGroup::setNbPresets(qint32 nb_presets) {
    this->nb_presets = nb_presets;
}

QList<SWGPresetItem*>*
SWGPresetGroup::getPresets() {
    return presets;
}
void
SWGPresetGroup::setPresets(QList<SWGPresetItem*>* presets) {
    this->presets = presets;
}


}

