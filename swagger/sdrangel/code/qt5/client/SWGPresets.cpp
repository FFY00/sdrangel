/**
 * SDRangel
 * This is the web API of SDRangel SDR software. SDRangel is an Open Source Qt5/OpenGL 3.0+ GUI and server Software Defined Radio and signal analyzer in software. It supports Airspy, BladeRF, HackRF, LimeSDR, PlutoSDR, RTL-SDR, SDRplay RSP1 and FunCube
 *
 * OpenAPI spec version: 4.0.0
 * Contact: f4exb06@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGPresets.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGPresets::SWGPresets(QString* json) {
    init();
    this->fromJson(*json);
}

SWGPresets::SWGPresets() {
    init();
}

SWGPresets::~SWGPresets() {
    this->cleanup();
}

void
SWGPresets::init() {
    nb_groups = 0;
    groups = new QList<SWGPresetGroup*>();
}

void
SWGPresets::cleanup() {
    

    if(groups != nullptr) {
        QList<SWGPresetGroup*>* arr = groups;
        foreach(SWGPresetGroup* o, *arr) {
            delete o;
        }
        delete groups;
    }
}

SWGPresets*
SWGPresets::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGPresets::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&nb_groups, pJson["nbGroups"], "qint32", "");
    
    ::Swagger::setValue(&groups, pJson["groups"], "QList", "SWGPresetGroup");
    
}

QString
SWGPresets::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGPresets::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("nbGroups", QJsonValue(nb_groups));

    QJsonArray groupsJsonArray;
    toJsonArray((QList<void*>*)groups, &groupsJsonArray, "groups", "SWGPresetGroup");
    obj->insert("groups", groupsJsonArray);

    return obj;
}

qint32
SWGPresets::getNbGroups() {
    return nb_groups;
}
void
SWGPresets::setNbGroups(qint32 nb_groups) {
    this->nb_groups = nb_groups;
}

QList<SWGPresetGroup*>*
SWGPresets::getGroups() {
    return groups;
}
void
SWGPresets::setGroups(QList<SWGPresetGroup*>* groups) {
    this->groups = groups;
}


}

